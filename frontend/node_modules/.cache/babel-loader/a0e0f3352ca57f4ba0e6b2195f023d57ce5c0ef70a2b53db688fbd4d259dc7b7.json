{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js\",\n  _s = $RefreshSig$();\n// WalletActions.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // Replace with your contract address\n\nfunction WalletActions() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const handleDeposit = async () => {\n    if (!amount) return alert('Please enter an amount to deposit.');\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Check for valid connection\n      if (!signer) {\n        alert('Failed to connect with MetaMask');\n        return;\n      }\n      const transaction = await signer.sendTransaction({\n        to: contractAddress,\n        value: ethers.parseEther(amount)\n      });\n      await transaction.wait();\n      alert('Deposit successful!');\n    } catch (error) {\n      console.error('Deposit failed:', error);\n      alert('Deposit failed. Please check the transaction details or try again.');\n    }\n  };\n  const handleWithdraw = async () => {\n    if (!amount) return alert('Please enter an amount to withdraw.');\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Assume the contract has a withdraw function that requires an amount\n      const contract = new ethers.Contract(contractAddress, [{\n        inputs: [{\n          internalType: 'uint256',\n          name: '_amount',\n          type: 'uint256'\n        }],\n        name: 'withdraw',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function'\n      }], signer);\n      const tx = await contract.withdraw(ethers.parseEther(amount));\n      await tx.wait();\n      alert('Withdrawal successful!');\n    } catch (error) {\n      console.error('Withdrawal failed:', error);\n      alert('Withdrawal failed. Please check the transaction details or try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter amount (ETH)\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletActions, \"bZHaZdBRaKnkQpBOPbUIgu3hW48=\");\n_c = WalletActions;\nexport default WalletActions;\nvar _c;\n$RefreshReg$(_c, \"WalletActions\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","contractAddress","WalletActions","_s","amount","setAmount","handleDeposit","alert","provider","BrowserProvider","window","ethereum","signer","getSigner","transaction","sendTransaction","to","value","parseEther","wait","error","console","handleWithdraw","contract","Contract","inputs","internalType","name","type","outputs","stateMutability","tx","withdraw","className","children","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js"],"sourcesContent":["// WalletActions.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\n\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // Replace with your contract address\n\nfunction WalletActions() {\n  const [amount, setAmount] = useState('');\n\n  const handleDeposit = async () => {\n    if (!amount) return alert('Please enter an amount to deposit.');\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      \n      // Check for valid connection\n      if (!signer) {\n        alert('Failed to connect with MetaMask');\n        return;\n      }\n\n      const transaction = await signer.sendTransaction({\n        to: contractAddress,\n        value: ethers.parseEther(amount),\n      });\n\n      await transaction.wait();\n      alert('Deposit successful!');\n    } catch (error) {\n      console.error('Deposit failed:', error);\n      alert('Deposit failed. Please check the transaction details or try again.');\n    }\n  };\n\n  const handleWithdraw = async () => {\n    if (!amount) return alert('Please enter an amount to withdraw.');\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Assume the contract has a withdraw function that requires an amount\n      const contract = new ethers.Contract(contractAddress, [\n        {\n          inputs: [{ internalType: 'uint256', name: '_amount', type: 'uint256' }],\n          name: 'withdraw',\n          outputs: [],\n          stateMutability: 'nonpayable',\n          type: 'function'\n        }\n      ], signer);\n\n      const tx = await contract.withdraw(ethers.parseEther(amount));\n      await tx.wait();\n      alert('Withdrawal successful!');\n    } catch (error) {\n      console.error('Withdrawal failed:', error);\n      alert('Withdrawal failed. Please check the transaction details or try again.');\n    }\n  };\n\n  return (\n    <div className=\"wallet-actions\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter amount (ETH)\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n      />\n      <button onClick={handleDeposit}>Deposit</button>\n      <button onClick={handleWithdraw}>Withdraw</button>\n    </div>\n  );\n}\n\nexport default WalletActions;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}