{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js\",\n  _s = $RefreshSig$();\n// WalletActions.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // Replace with your contract address\nconst contractABI = [{\n  \"inputs\": [],\n  \"name\": \"deposit\",\n  \"outputs\": [],\n  \"stateMutability\": \"payable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"_amount\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"withdraw\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"name\": \"balances\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}];\nfunction WalletActions() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  useEffect(() => {\n    if (window.ethereum) {\n      updateBalance();\n    }\n  }, []);\n  const updateBalance = async () => {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n      const userAddress = await signer.getAddress();\n      const userBalance = await contract.balances(userAddress);\n      setBalance(ethers.formatEther(userBalance));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  const handleDeposit = async () => {\n    if (!amount) return alert('Please enter an amount to deposit.');\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const transaction = await signer.sendTransaction({\n        to: contractAddress,\n        value: ethers.parseEther(amount)\n      });\n      await transaction.wait();\n      alert('Deposit successful!');\n      updateBalance();\n    } catch (error) {\n      console.error('Deposit failed:', error);\n      alert('Deposit failed. Please check the transaction details or try again.');\n    }\n  };\n  const handleWithdraw = async () => {\n    if (!amount) return alert('Please enter an amount to withdraw.');\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n      const tx = await contract.withdraw(ethers.parseEther(amount));\n      await tx.wait();\n      alert('Withdrawal successful!');\n      updateBalance();\n    } catch (error) {\n      console.error('Withdrawal failed:', error);\n      alert('Withdrawal failed. Please check the transaction details or try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Balance: \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter amount (ETH)\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletActions, \"vMKCjfqtbueDRUjRreBF060xGIU=\");\n_c = WalletActions;\nexport default WalletActions;\nvar _c;\n$RefreshReg$(_c, \"WalletActions\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","contractAddress","contractABI","WalletActions","_s","amount","setAmount","balance","setBalance","window","ethereum","updateBalance","provider","BrowserProvider","signer","getSigner","contract","Contract","userAddress","getAddress","userBalance","balances","formatEther","error","console","handleDeposit","alert","transaction","sendTransaction","to","value","parseEther","wait","handleWithdraw","tx","withdraw","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js"],"sourcesContent":["// WalletActions.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\n\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // Replace with your contract address\nconst contractABI = [\n  {\n    \"inputs\": [],\n    \"name\": \"deposit\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"_amount\", \"type\": \"uint256\" }],\n    \"name\": \"withdraw\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }],\n    \"name\": \"balances\",\n    \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n];\n\nfunction WalletActions() {\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n\n  useEffect(() => {\n    if (window.ethereum) {\n      updateBalance();\n    }\n  }, []);\n\n  const updateBalance = async () => {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n      const userAddress = await signer.getAddress();\n      const userBalance = await contract.balances(userAddress);\n      setBalance(ethers.formatEther(userBalance));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n\n  const handleDeposit = async () => {\n    if (!amount) return alert('Please enter an amount to deposit.');\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const transaction = await signer.sendTransaction({\n        to: contractAddress,\n        value: ethers.parseEther(amount),\n      });\n\n      await transaction.wait();\n      alert('Deposit successful!');\n      updateBalance();\n    } catch (error) {\n      console.error('Deposit failed:', error);\n      alert('Deposit failed. Please check the transaction details or try again.');\n    }\n  };\n\n  const handleWithdraw = async () => {\n    if (!amount) return alert('Please enter an amount to withdraw.');\n\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, contractABI, signer);\n      const tx = await contract.withdraw(ethers.parseEther(amount));\n      await tx.wait();\n      alert('Withdrawal successful!');\n      updateBalance();\n    } catch (error) {\n      console.error('Withdrawal failed:', error);\n      alert('Withdrawal failed. Please check the transaction details or try again.');\n    }\n  };\n\n  return (\n    <div className=\"wallet-actions\">\n      <p>Current Balance: {balance} ETH</p>\n      <input\n        type=\"text\"\n        placeholder=\"Enter amount (ETH)\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n      />\n      <button onClick={handleDeposit}>Deposit</button>\n      <button onClick={handleWithdraw}>Withdraw</button>\n    </div>\n  );\n}\n\nexport default WalletActions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}