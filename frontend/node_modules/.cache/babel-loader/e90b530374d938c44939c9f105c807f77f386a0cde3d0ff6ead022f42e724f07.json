{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/Payment.js\",\n  _s = $RefreshSig$();\n// Payment.js\n// PaymentPage.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport PaymentContractABI from './PaymentContract.json'; // Adjusted to match the current structure\n\nimport './Payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // Replace with the deployed contract address\n\nfunction PaymentPage() {\n  _s();\n  const [depositAmount, setDepositAmount] = useState('');\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [userBalance, setUserBalance] = useState(null);\n\n  // Connect to the contract and deposit ETH\n  const handleDeposit = async () => {\n    if (!depositAmount) {\n      alert('Please enter an amount to deposit.');\n      return;\n    }\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n        const tx = await contract.deposit({\n          value: ethers.parseEther(depositAmount)\n        });\n        await tx.wait();\n        alert('Deposit successful!');\n      } catch (error) {\n        console.error('Error depositing:', error);\n        alert('Deposit failed. Please try again.');\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n\n  // Connect to the contract and withdraw ETH\n  const handleWithdraw = async () => {\n    if (!withdrawAmount) {\n      alert('Please enter an amount to withdraw.');\n      return;\n    }\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n        const tx = await contract.withdraw(ethers.parseEther(withdrawAmount));\n        await tx.wait();\n        alert('Withdrawal successful!');\n      } catch (error) {\n        console.error('Error withdrawing:', error);\n        alert('Withdrawal failed. Please try again.');\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n\n  // Fetch the user's balance in the contract\n  const fetchBalance = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n        const balance = await contract.balances(await signer.getAddress());\n        setUserBalance(ethers.formatEther(balance));\n      } catch (error) {\n        console.error('Error fetching balance:', error);\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balance-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchBalance,\n        children: \"Get Balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), userBalance !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your Balance: \", userBalance, \" ETH\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deposit-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Deposit Amount (ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: depositAmount,\n          onChange: e => setDepositAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeposit,\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"withdraw-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Withdraw Amount (ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: withdrawAmount,\n          onChange: e => setWithdrawAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleWithdraw,\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(PaymentPage, \"VYAxFgFgHIEvF14Ls8+kF+kRLrQ=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","ethers","PaymentContractABI","jsxDEV","_jsxDEV","contractAddress","PaymentPage","_s","depositAmount","setDepositAmount","withdrawAmount","setWithdrawAmount","userBalance","setUserBalance","handleDeposit","alert","window","ethereum","provider","BrowserProvider","signer","getSigner","contract","Contract","abi","tx","deposit","value","parseEther","wait","error","console","handleWithdraw","withdraw","fetchBalance","balance","balances","getAddress","formatEther","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/Payment.js"],"sourcesContent":["// Payment.js\n// PaymentPage.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport PaymentContractABI from './PaymentContract.json'; // Adjusted to match the current structure\n\nimport './Payment.css';\n\n\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // Replace with the deployed contract address\n\nfunction PaymentPage() {\n  const [depositAmount, setDepositAmount] = useState('');\n  const [withdrawAmount, setWithdrawAmount] = useState('');\n  const [userBalance, setUserBalance] = useState(null);\n\n  // Connect to the contract and deposit ETH\n  const handleDeposit = async () => {\n    if (!depositAmount) {\n      alert('Please enter an amount to deposit.');\n      return;\n    }\n\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n        const tx = await contract.deposit({\n          value: ethers.parseEther(depositAmount),\n        });\n        await tx.wait();\n        alert('Deposit successful!');\n      } catch (error) {\n        console.error('Error depositing:', error);\n        alert('Deposit failed. Please try again.');\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n\n  // Connect to the contract and withdraw ETH\n  const handleWithdraw = async () => {\n    if (!withdrawAmount) {\n      alert('Please enter an amount to withdraw.');\n      return;\n    }\n\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n        const tx = await contract.withdraw(ethers.parseEther(withdrawAmount));\n        await tx.wait();\n        alert('Withdrawal successful!');\n      } catch (error) {\n        console.error('Error withdrawing:', error);\n        alert('Withdrawal failed. Please try again.');\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n\n  // Fetch the user's balance in the contract\n  const fetchBalance = async () => {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n        const balance = await contract.balances(await signer.getAddress());\n        setUserBalance(ethers.formatEther(balance));\n      } catch (error) {\n        console.error('Error fetching balance:', error);\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n\n  return (\n    <div className=\"payment-page\">\n      <h2>Payment Page</h2>\n      <div className=\"balance-container\">\n        <button onClick={fetchBalance}>Get Balance</button>\n        {userBalance !== null && <p>Your Balance: {userBalance} ETH</p>}\n      </div>\n      <div className=\"deposit-container\">\n        <label>\n          Deposit Amount (ETH):\n          <input\n            type=\"text\"\n            value={depositAmount}\n            onChange={(e) => setDepositAmount(e.target.value)}\n          />\n        </label>\n        <button onClick={handleDeposit}>Deposit</button>\n      </div>\n      <div className=\"withdraw-container\">\n        <label>\n          Withdraw Amount (ETH):\n          <input\n            type=\"text\"\n            value={withdrawAmount}\n            onChange={(e) => setWithdrawAmount(e.target.value)}\n          />\n        </label>\n        <button onClick={handleWithdraw}>Withdraw</button>\n      </div>\n    </div>\n  );\n}\n\nexport default PaymentPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}