{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js\",\n  _s = $RefreshSig$();\n// WalletActions.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WalletActions() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const handleDeposit = async () => {\n    if (!amount) return alert('Please enter an amount to deposit.');\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      await signer.sendTransaction({\n        to: 'YOUR_CONTRACT_ADDRESS_HERE',\n        // Replace with your contract address\n        value: ethers.parseEther(amount)\n      });\n      alert('Deposit successful!');\n    } catch (error) {\n      console.error('Deposit failed:', error);\n      alert('Deposit failed. Please try again.');\n    }\n  };\n  const handleWithdraw = async () => {\n    if (!amount) return alert('Please enter an amount to withdraw.');\n    // Implement withdraw logic here, e.g., calling a contract function\n    alert(`Attempting to withdraw ${amount} ETH`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter amount (ETH)\",\n      value: amount,\n      onChange: e => setAmount(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletActions, \"bZHaZdBRaKnkQpBOPbUIgu3hW48=\");\n_c = WalletActions;\nexport default WalletActions;\nvar _c;\n$RefreshReg$(_c, \"WalletActions\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","WalletActions","_s","amount","setAmount","handleDeposit","alert","provider","BrowserProvider","window","ethereum","signer","getSigner","sendTransaction","to","value","parseEther","error","console","handleWithdraw","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js"],"sourcesContent":["// WalletActions.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\n\nfunction WalletActions() {\n  const [amount, setAmount] = useState('');\n\n  const handleDeposit = async () => {\n    if (!amount) return alert('Please enter an amount to deposit.');\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      await signer.sendTransaction({\n        to: 'YOUR_CONTRACT_ADDRESS_HERE', // Replace with your contract address\n        value: ethers.parseEther(amount),\n      });\n      alert('Deposit successful!');\n    } catch (error) {\n      console.error('Deposit failed:', error);\n      alert('Deposit failed. Please try again.');\n    }\n  };\n\n  const handleWithdraw = async () => {\n    if (!amount) return alert('Please enter an amount to withdraw.');\n    // Implement withdraw logic here, e.g., calling a contract function\n    alert(`Attempting to withdraw ${amount} ETH`);\n  };\n\n  return (\n    <div className=\"wallet-actions\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter amount (ETH)\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n      />\n      <button onClick={handleDeposit}>Deposit</button>\n      <button onClick={handleWithdraw}>Withdraw</button>\n    </div>\n  );\n}\n\nexport default WalletActions;\n\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACF,MAAM,EAAE,OAAOG,KAAK,CAAC,oCAAoC,CAAC;IAC/D,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIT,MAAM,CAACU,eAAe,CAACC,MAAM,CAACC,QAAQ,CAAC;MAC5D,MAAMC,MAAM,GAAG,MAAMJ,QAAQ,CAACK,SAAS,CAAC,CAAC;MACzC,MAAMD,MAAM,CAACE,eAAe,CAAC;QAC3BC,EAAE,EAAE,4BAA4B;QAAE;QAClCC,KAAK,EAAEjB,MAAM,CAACkB,UAAU,CAACb,MAAM;MACjC,CAAC,CAAC;MACFG,KAAK,CAAC,qBAAqB,CAAC;IAC9B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCX,KAAK,CAAC,mCAAmC,CAAC;IAC5C;EACF,CAAC;EAED,MAAMa,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAAChB,MAAM,EAAE,OAAOG,KAAK,CAAC,qCAAqC,CAAC;IAChE;IACAA,KAAK,CAAC,0BAA0BH,MAAM,MAAM,CAAC;EAC/C,CAAC;EAED,oBACEH,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCR,KAAK,EAAEZ,MAAO;MACdqB,QAAQ,EAAGC,CAAC,IAAKrB,SAAS,CAACqB,CAAC,CAACC,MAAM,CAACX,KAAK;IAAE;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACF9B,OAAA;MAAQ+B,OAAO,EAAE1B,aAAc;MAAAgB,QAAA,EAAC;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChD9B,OAAA;MAAQ+B,OAAO,EAAEZ,cAAe;MAAAE,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAAC5B,EAAA,CArCQD,aAAa;AAAA+B,EAAA,GAAb/B,aAAa;AAuCtB,eAAeA,aAAa;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}