{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\nimport PaymentContractABI from './PaymentContract.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = 'YOUR_CONTRACT_ADDRESS_HERE'; // Replace with the deployed contract address\n\nfunction WalletActions() {\n  _s();\n  const [depositAmount, setDepositAmount] = useState('');\n  const [balance, setBalance] = useState(null);\n  useEffect(() => {\n    // Fetch balance on component mount\n    if (window.ethereum) {\n      fetchBalance();\n    }\n  }, []);\n  const fetchBalance = async () => {\n    if (!window.ethereum) return alert('Please install MetaMask');\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n    try {\n      const currentBalance = await contract.getContractBalance();\n      setBalance(ethers.utils.formatEther(currentBalance));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  const handleDeposit = async () => {\n    if (!depositAmount) return alert('Please enter an amount to deposit');\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n      try {\n        const tx = await contract.deposit({\n          value: ethers.parseEther(depositAmount)\n        });\n        await tx.wait();\n        alert('Deposit successful!');\n        setDepositAmount(''); // Clear input after deposit\n        fetchBalance(); // Update balance after transaction\n      } catch (error) {\n        console.error('Deposit failed:', error);\n        alert('Deposit failed. Please check the transaction details or try again.');\n      }\n    } else {\n      alert('Please install MetaMask');\n    }\n  };\n  const handleWithdraw = async () => {\n    if (!depositAmount) return alert('Please enter an amount to withdraw');\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n      try {\n        const tx = await contract.withdraw(ethers.parseEther(depositAmount));\n        await tx.wait();\n        alert('Withdrawal successful!');\n        setDepositAmount(''); // Clear input after withdrawal\n        fetchBalance(); // Update balance after transaction\n      } catch (error) {\n        console.error('Withdrawal failed:', error);\n        alert('Withdrawal failed. Please check the transaction details or try again.');\n      }\n    } else {\n      alert('Please install MetaMask');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-actions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Wallet Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Balance: \", balance !== null ? `${balance} ETH` : 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"0.0\",\n      value: depositAmount,\n      onChange: e => setDepositAmount(e.target.value),\n      className: \"wallet-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeposit,\n      className: \"wallet-button\",\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdraw,\n      className: \"wallet-button\",\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletActions, \"dB38oAJXuJd12zCsfTDoEo6fayM=\");\n_c = WalletActions;\nexport default WalletActions;\nvar _c;\n$RefreshReg$(_c, \"WalletActions\");","map":{"version":3,"names":["React","useState","useEffect","ethers","PaymentContractABI","jsxDEV","_jsxDEV","contractAddress","WalletActions","_s","depositAmount","setDepositAmount","balance","setBalance","window","ethereum","fetchBalance","alert","provider","BrowserProvider","signer","getSigner","contract","Contract","abi","currentBalance","getContractBalance","utils","formatEther","error","console","handleDeposit","tx","deposit","value","parseEther","wait","handleWithdraw","withdraw","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './WalletActions.css';\nimport PaymentContractABI from './PaymentContract.json';\n\nconst contractAddress = 'YOUR_CONTRACT_ADDRESS_HERE'; // Replace with the deployed contract address\n\nfunction WalletActions() {\n  const [depositAmount, setDepositAmount] = useState('');\n  const [balance, setBalance] = useState(null);\n\n  useEffect(() => {\n    // Fetch balance on component mount\n    if (window.ethereum) {\n      fetchBalance();\n    }\n  }, []);\n\n  const fetchBalance = async () => {\n    if (!window.ethereum) return alert('Please install MetaMask');\n\n    const provider = new ethers.BrowserProvider(window.ethereum);\n    const signer = await provider.getSigner();\n    const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n    try {\n      const currentBalance = await contract.getContractBalance();\n      setBalance(ethers.utils.formatEther(currentBalance));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n\n  const handleDeposit = async () => {\n    if (!depositAmount) return alert('Please enter an amount to deposit');\n\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n      try {\n        const tx = await contract.deposit({ value: ethers.parseEther(depositAmount) });\n        await tx.wait();\n        alert('Deposit successful!');\n        setDepositAmount(''); // Clear input after deposit\n        fetchBalance(); // Update balance after transaction\n      } catch (error) {\n        console.error('Deposit failed:', error);\n        alert('Deposit failed. Please check the transaction details or try again.');\n      }\n    } else {\n      alert('Please install MetaMask');\n    }\n  };\n\n  const handleWithdraw = async () => {\n    if (!depositAmount) return alert('Please enter an amount to withdraw');\n\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n      try {\n        const tx = await contract.withdraw(ethers.parseEther(depositAmount));\n        await tx.wait();\n        alert('Withdrawal successful!');\n        setDepositAmount(''); // Clear input after withdrawal\n        fetchBalance(); // Update balance after transaction\n      } catch (error) {\n        console.error('Withdrawal failed:', error);\n        alert('Withdrawal failed. Please check the transaction details or try again.');\n      }\n    } else {\n      alert('Please install MetaMask');\n    }\n  };\n\n  return (\n    <div className=\"wallet-actions-container\">\n      <h4>Wallet Options</h4>\n      <p>Current Balance: {balance !== null ? `${balance} ETH` : 'Loading...'}</p>\n      <input\n        type=\"number\"\n        placeholder=\"0.0\"\n        value={depositAmount}\n        onChange={(e) => setDepositAmount(e.target.value)}\n        className=\"wallet-input\"\n      />\n      <button onClick={handleDeposit} className=\"wallet-button\">Deposit</button>\n      <button onClick={handleWithdraw} className=\"wallet-button\">Withdraw</button>\n    </div>\n  );\n}\n\nexport default WalletActions;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}