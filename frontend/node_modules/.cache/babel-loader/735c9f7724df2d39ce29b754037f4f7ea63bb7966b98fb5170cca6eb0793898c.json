{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/ConnectButton.js\",\n  _s = $RefreshSig$();\n// ConnectButton.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserProvider } from 'ethers';\nimport WalletActions from './WalletActions';\nimport './ConnectButton.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ConnectButton({\n  onWalletConnect\n}) {\n  _s();\n  const [address, setAddress] = useState(null);\n  const [showWalletActions, setShowWalletActions] = useState(false);\n\n  // Function to connect to MetaMask\n  const connectToMetaMask = async () => {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const userAddress = await signer.getAddress();\n        setAddress(userAddress);\n        localStorage.setItem('walletAddress', userAddress);\n        onWalletConnect(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n      }\n    } else {\n      alert('MetaMask not detected. Please install MetaMask!');\n    }\n  };\n\n  // Function to disconnect the wallet\n  const disconnect = () => {\n    localStorage.removeItem('walletAddress');\n    setAddress(null);\n    setShowWalletActions(false);\n    onWalletConnect(false);\n  };\n\n  // Toggle dropdown for WalletActions\n  const toggleWalletActions = () => {\n    setShowWalletActions(prev => !prev);\n  };\n\n  // Effect to load address from localStorage on component mount\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('walletAddress');\n    if (savedAddress) {\n      setAddress(savedAddress);\n      onWalletConnect(true);\n    }\n  }, [onWalletConnect]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"connect-button-container\",\n    children: address ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"connected-address\",\n        children: [\"Connected: \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"connect-button\",\n        onClick: disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-button\",\n        onClick: toggleWalletActions,\n        children: \"Wallet Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), showWalletActions && /*#__PURE__*/_jsxDEV(WalletActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"connect-button\",\n      onClick: connectToMetaMask,\n      children: \"Connect to MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectButton, \"0ZTfPzGf4X9YVwwY8JmS2YDSYIM=\");\n_c = ConnectButton;\nexport default ConnectButton;\nvar _c;\n$RefreshReg$(_c, \"ConnectButton\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","WalletActions","jsxDEV","_jsxDEV","Fragment","_Fragment","ConnectButton","onWalletConnect","_s","address","setAddress","showWalletActions","setShowWalletActions","connectToMetaMask","window","ethereum","request","method","provider","signer","getSigner","userAddress","getAddress","localStorage","setItem","error","console","alert","disconnect","removeItem","toggleWalletActions","prev","savedAddress","getItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/ConnectButton.js"],"sourcesContent":["// ConnectButton.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserProvider } from 'ethers';\nimport WalletActions from './WalletActions';\nimport './ConnectButton.css';\n\nfunction ConnectButton({ onWalletConnect }) {\n  const [address, setAddress] = useState(null);\n  const [showWalletActions, setShowWalletActions] = useState(false);\n\n  // Function to connect to MetaMask\n  const connectToMetaMask = async () => {\n    if (window.ethereum) {\n      try {\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        const userAddress = await signer.getAddress();\n        setAddress(userAddress);\n        localStorage.setItem('walletAddress', userAddress);\n        onWalletConnect(true);\n      } catch (error) {\n        console.error('Connection error:', error);\n      }\n    } else {\n      alert('MetaMask not detected. Please install MetaMask!');\n    }\n  };\n\n  // Function to disconnect the wallet\n  const disconnect = () => {\n    localStorage.removeItem('walletAddress');\n    setAddress(null);\n    setShowWalletActions(false);\n    onWalletConnect(false);\n  };\n\n  // Toggle dropdown for WalletActions\n  const toggleWalletActions = () => {\n    setShowWalletActions((prev) => !prev);\n  };\n\n  // Effect to load address from localStorage on component mount\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('walletAddress');\n    if (savedAddress) {\n      setAddress(savedAddress);\n      onWalletConnect(true);\n    }\n  }, [onWalletConnect]);\n\n  return (\n    <div className=\"connect-button-container\">\n      {address ? (\n        <>\n          <span className=\"connected-address\">Connected: {address}</span>\n          <button className=\"connect-button\" onClick={disconnect}>Disconnect</button>\n          <button className=\"dropdown-button\" onClick={toggleWalletActions}>\n            Wallet Options\n          </button>\n          {showWalletActions && <WalletActions />}\n        </>\n      ) : (\n        <button className=\"connect-button\" onClick={connectToMetaMask}>Connect to MetaMask</button>\n      )}\n    </div>\n  );\n}\n\nexport default ConnectButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}