{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/BettingPage.js\",\n  _s = $RefreshSig$();\n// BettingPage.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ethers } from 'ethers';\n// Import ABI for PaymentContract\nimport './BettingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // New PaymentContract address\n\nfunction BettingPage() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const game = state === null || state === void 0 ? void 0 : state.game; // Ensure this data is still relevant if you're using game details\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [transactionHash, setTransactionHash] = useState('');\n  const handlePayment = async () => {\n    if (!paymentAmount) {\n      alert('Please enter an amount.');\n      return;\n    }\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n      try {\n        // Assuming `PaymentContract` has a method `makePayment` for sending payments\n        const tx = await contract.makePayment({\n          value: ethers.parseEther(paymentAmount)\n        });\n        await tx.wait();\n        setTransactionHash(tx.hash);\n        alert('Payment sent successfully!');\n      } catch (error) {\n        console.error('Error making payment:', error);\n        alert('Payment failed. Please try again.');\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Make a Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Payment Amount (ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: paymentAmount,\n          onChange: e => setPaymentAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePayment,\n      children: \"Send Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), transactionHash && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transaction Hash: \", transactionHash]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(BettingPage, \"agsd6z9lJbWQ3m/A48VoBo4MZrs=\", false, function () {\n  return [useLocation];\n});\n_c = BettingPage;\nexport default BettingPage;\nvar _c;\n$RefreshReg$(_c, \"BettingPage\");","map":{"version":3,"names":["React","useState","useLocation","ethers","jsxDEV","_jsxDEV","contractAddress","BettingPage","_s","state","game","paymentAmount","setPaymentAmount","transactionHash","setTransactionHash","handlePayment","alert","window","ethereum","provider","BrowserProvider","signer","getSigner","contract","Contract","PaymentContractABI","abi","tx","makePayment","value","parseEther","wait","hash","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/BettingPage.js"],"sourcesContent":["// BettingPage.js\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ethers } from 'ethers';\n// Import ABI for PaymentContract\nimport './BettingPage.css';\n\nconst contractAddress = '0x12e31C3ECD08d3b5C0775F623db3bdd7ec1e2931'; // New PaymentContract address\n\nfunction BettingPage() {\n  const { state } = useLocation();\n  const game = state?.game; // Ensure this data is still relevant if you're using game details\n  const [paymentAmount, setPaymentAmount] = useState('');\n  const [transactionHash, setTransactionHash] = useState('');\n\n  const handlePayment = async () => {\n    if (!paymentAmount) {\n      alert('Please enter an amount.');\n      return;\n    }\n\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n      try {\n        // Assuming `PaymentContract` has a method `makePayment` for sending payments\n        const tx = await contract.makePayment({\n          value: ethers.parseEther(paymentAmount),\n        });\n        await tx.wait();\n        setTransactionHash(tx.hash);\n        alert('Payment sent successfully!');\n      } catch (error) {\n        console.error('Error making payment:', error);\n        alert('Payment failed. Please try again.');\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Make a Payment</h2>\n      <div>\n        <label>\n          Payment Amount (ETH):\n          <input\n            type=\"text\"\n            value={paymentAmount}\n            onChange={(e) => setPaymentAmount(e.target.value)}\n          />\n        </label>\n      </div>\n      <button onClick={handlePayment}>Send Payment</button>\n      {transactionHash && <p>Transaction Hash: {transactionHash}</p>}\n    </div>\n  );\n}\n\nexport default BettingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}