{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js\",\n  _s = $RefreshSig$();\n// WalletActions.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport PaymentContractABI from './PaymentContractABI.json'; // Ensure this ABI is correct and up-to-date\nimport './WalletActions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst paymentContractAddress = 'YOUR_CONTRACT_ADDRESS_HERE'; // Replace with deployed contract address\n\nfunction WalletActions() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [transactionHash, setTransactionHash] = useState('');\n  const [action, setAction] = useState(''); // \"deposit\" or \"withdraw\"\n\n  const handleAction = async () => {\n    if (!amount || !action) {\n      alert('Please enter an amount and select an action.');\n      return;\n    }\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(paymentContractAddress, PaymentContractABI.abi, signer);\n      try {\n        const value = ethers.parseEther(amount);\n        let tx;\n        if (action === 'deposit') {\n          // Deposit ETH into the contract\n          tx = await contract.deposit({\n            value\n          });\n        } else if (action === 'withdraw') {\n          // Withdraw ETH from the contract\n          tx = await contract.withdraw(value);\n        }\n        await tx.wait(); // Wait for the transaction to be mined\n        setTransactionHash(tx.hash);\n        alert(`${action.charAt(0).toUpperCase() + action.slice(1)} successful!`);\n      } catch (error) {\n        console.error(`Error with ${action}:`, error);\n        alert(`${action.charAt(0).toUpperCase() + action.slice(1)} failed. Please try again.`);\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Deposit / Withdraw ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-input\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Amount (ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: amount,\n          onChange: e => setAmount(e.target.value),\n          placeholder: \"Enter amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wallet-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setAction('deposit');\n          handleAction();\n        },\n        className: \"deposit-button\",\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setAction('withdraw');\n          handleAction();\n        },\n        className: \"withdraw-button\",\n        children: \"Withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), transactionHash && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transaction Hash: \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://etherscan.io/tx/${transactionHash}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: transactionHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletActions, \"Ya/P23KImK3hCMcs4/yO+viLsQU=\");\n_c = WalletActions;\nexport default WalletActions;\nvar _c;\n$RefreshReg$(_c, \"WalletActions\");","map":{"version":3,"names":["React","useState","ethers","PaymentContractABI","jsxDEV","_jsxDEV","paymentContractAddress","WalletActions","_s","amount","setAmount","transactionHash","setTransactionHash","action","setAction","handleAction","alert","window","ethereum","provider","BrowserProvider","signer","getSigner","contract","Contract","abi","value","parseEther","tx","deposit","withdraw","wait","hash","charAt","toUpperCase","slice","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","href","rel","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js"],"sourcesContent":["// WalletActions.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport PaymentContractABI from './PaymentContractABI.json'; // Ensure this ABI is correct and up-to-date\nimport './WalletActions.css';\n\nconst paymentContractAddress = 'YOUR_CONTRACT_ADDRESS_HERE'; // Replace with deployed contract address\n\nfunction WalletActions() {\n  const [amount, setAmount] = useState('');\n  const [transactionHash, setTransactionHash] = useState('');\n  const [action, setAction] = useState(''); // \"deposit\" or \"withdraw\"\n\n  const handleAction = async () => {\n    if (!amount || !action) {\n      alert('Please enter an amount and select an action.');\n      return;\n    }\n\n    if (window.ethereum) {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new ethers.Contract(paymentContractAddress, PaymentContractABI.abi, signer);\n\n      try {\n        const value = ethers.parseEther(amount);\n        \n        let tx;\n        if (action === 'deposit') {\n          // Deposit ETH into the contract\n          tx = await contract.deposit({ value });\n        } else if (action === 'withdraw') {\n          // Withdraw ETH from the contract\n          tx = await contract.withdraw(value);\n        }\n\n        await tx.wait(); // Wait for the transaction to be mined\n        setTransactionHash(tx.hash);\n        alert(`${action.charAt(0).toUpperCase() + action.slice(1)} successful!`);\n      } catch (error) {\n        console.error(`Error with ${action}:`, error);\n        alert(`${action.charAt(0).toUpperCase() + action.slice(1)} failed. Please try again.`);\n      }\n    } else {\n      alert('MetaMask is not installed.');\n    }\n  };\n\n  return (\n    <div className=\"wallet-actions\">\n      <h2>Deposit / Withdraw ETH</h2>\n      <div className=\"wallet-input\">\n        <label>\n          Amount (ETH):\n          <input\n            type=\"text\"\n            value={amount}\n            onChange={(e) => setAmount(e.target.value)}\n            placeholder=\"Enter amount\"\n          />\n        </label>\n      </div>\n      <div className=\"wallet-buttons\">\n        <button onClick={() => { setAction('deposit'); handleAction(); }} className=\"deposit-button\">\n          Deposit\n        </button>\n        <button onClick={() => { setAction('withdraw'); handleAction(); }} className=\"withdraw-button\">\n          Withdraw\n        </button>\n      </div>\n      {transactionHash && (\n        <p>Transaction Hash: <a href={`https://etherscan.io/tx/${transactionHash}`} target=\"_blank\" rel=\"noopener noreferrer\">{transactionHash}</a></p>\n      )}\n    </div>\n  );\n}\n\nexport default WalletActions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}