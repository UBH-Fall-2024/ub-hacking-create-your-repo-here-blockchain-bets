{"ast":null,"code":"var _jsxFileName = \"/Users/dariuscooly/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/ConnectButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserProvider } from 'ethers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ConnectButton() {\n  _s();\n  const [address, setAddress] = useState(null);\n\n  // Function to connect to MetaMask\n  const connectToMetaMask = async () => {\n    if (window.ethereum) {\n      try {\n        // Request account access from MetaMask\n        await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n\n        // Create a provider instance\n        const provider = new BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n\n        // Get the user's address and save it\n        const userAddress = await signer.getAddress();\n        setAddress(userAddress);\n\n        // Store the address in localStorage\n        localStorage.setItem('walletAddress', userAddress);\n      } catch (error) {\n        console.error('Connection error:', error);\n      }\n    } else {\n      alert('MetaMask not detected. Please install MetaMask!');\n    }\n  };\n\n  // Function to disconnect and clear the wallet address\n  const disconnect = () => {\n    localStorage.removeItem('walletAddress');\n    setAddress(null);\n  };\n\n  // Effect to load address from localStorage on component mount\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('walletAddress');\n    if (savedAddress) {\n      setAddress(savedAddress);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: address ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Connected: \", address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectToMetaMask,\n      children: \"Connect to MetaMask\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ConnectButton, \"xZ0QtoNlbd44okCw04/b87y81Yo=\");\n_c = ConnectButton;\nexport default ConnectButton;\nvar _c;\n$RefreshReg$(_c, \"ConnectButton\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","ConnectButton","_s","address","setAddress","connectToMetaMask","window","ethereum","request","method","provider","signer","getSigner","userAddress","getAddress","localStorage","setItem","error","console","alert","disconnect","removeItem","savedAddress","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/dariuscooly/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/ConnectButton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserProvider } from 'ethers';\n\nfunction ConnectButton() {\n  const [address, setAddress] = useState(null);\n\n  // Function to connect to MetaMask\n  const connectToMetaMask = async () => {\n    if (window.ethereum) {\n      try {\n        // Request account access from MetaMask\n        await window.ethereum.request({ method: 'eth_requestAccounts' });\n        \n        // Create a provider instance\n        const provider = new BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        \n        // Get the user's address and save it\n        const userAddress = await signer.getAddress();\n        setAddress(userAddress);\n\n        // Store the address in localStorage\n        localStorage.setItem('walletAddress', userAddress);\n      } catch (error) {\n        console.error('Connection error:', error);\n      }\n    } else {\n      alert('MetaMask not detected. Please install MetaMask!');\n    }\n  };\n\n  // Function to disconnect and clear the wallet address\n  const disconnect = () => {\n    localStorage.removeItem('walletAddress');\n    setAddress(null);\n  };\n\n  // Effect to load address from localStorage on component mount\n  useEffect(() => {\n    const savedAddress = localStorage.getItem('walletAddress');\n    if (savedAddress) {\n      setAddress(savedAddress);\n    }\n  }, []);\n\n  return (\n    <div>\n      {address ? (\n        <>\n          <p>Connected: {address}</p>\n          <button onClick={disconnect}>Disconnect</button>\n        </>\n      ) : (\n        <button onClick={connectToMetaMask}>Connect to MetaMask</button>\n      )}\n    </div>\n  );\n}\n\nexport default ConnectButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnB,IAAI;QACF;QACA,MAAMD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;;QAEhE;QACA,MAAMC,QAAQ,GAAG,IAAId,eAAe,CAACU,MAAM,CAACC,QAAQ,CAAC;QACrD,MAAMI,MAAM,GAAG,MAAMD,QAAQ,CAACE,SAAS,CAAC,CAAC;;QAEzC;QACA,MAAMC,WAAW,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;QAC7CV,UAAU,CAACS,WAAW,CAAC;;QAEvB;QACAE,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEH,WAAW,CAAC;MACpD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MAC3C;IACF,CAAC,MAAM;MACLE,KAAK,CAAC,iDAAiD,CAAC;IAC1D;EACF,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBL,YAAY,CAACM,UAAU,CAAC,eAAe,CAAC;IACxCjB,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACAT,SAAS,CAAC,MAAM;IACd,MAAM2B,YAAY,GAAGP,YAAY,CAACQ,OAAO,CAAC,eAAe,CAAC;IAC1D,IAAID,YAAY,EAAE;MAChBlB,UAAU,CAACkB,YAAY,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IAAA0B,QAAA,EACGrB,OAAO,gBACNL,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,GAAG,aAAW,EAACrB,OAAO;MAAA;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B9B,OAAA;QAAQ+B,OAAO,EAAET,UAAW;QAAAI,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAChD,CAAC,gBAEH9B,OAAA;MAAQ+B,OAAO,EAAExB,iBAAkB;MAAAmB,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CAtDQD,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAwDtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}