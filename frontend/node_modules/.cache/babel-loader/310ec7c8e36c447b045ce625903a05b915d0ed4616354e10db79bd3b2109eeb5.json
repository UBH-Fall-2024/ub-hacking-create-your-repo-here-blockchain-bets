{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/LiveScores.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers'; // Import ethers for interacting with MetaMask\nimport './LiveScores.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LiveScores({\n  isWalletConnected\n}) {\n  _s();\n  const [liveScores, setLiveScores] = useState([]);\n  const [selectedGame, setSelectedGame] = useState(null); // Store selected game\n\n  useEffect(() => {\n    // Fetch live scores only if the wallet is connected\n    if (isWalletConnected) {\n      async function fetchScores() {\n        try {\n          const response = await fetch('http://127.0.0.1:5000/api/live_scores');\n          const data = await response.json();\n          setLiveScores(data);\n        } catch (error) {\n          console.error(\"Error fetching live scores:\", error);\n        }\n      }\n      fetchScores();\n    } else {\n      setLiveScores([]); // Clear scores if wallet is disconnected\n    }\n  }, [isWalletConnected]);\n\n  // Function to handle betting on a game\n  async function handleBet(game, team) {\n    if (!window.ethereum) {\n      console.error(\"MetaMask is not installed!\");\n      return;\n    }\n    try {\n      // Request user to connect MetaMask\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      // Load the smart contract\n      const contractAddress = \"0x2905F0A41A80510898aE76290cf1eCFCA41650CC\"; // Replace with deployed contract address\n      const abi = [\n      // Minimal ABI to interact with the placeBet function in your contract\n      \"function placeBet(uint256 _gameId, uint8 _option) payable\"];\n      const contract = new ethers.Contract(contractAddress, abi, signer);\n\n      // Call the placeBet function on the smart contract\n      const gameId = game.id; // Assuming `game` has an `id` property\n      const betOption = team === 'home' ? 0 : 1; // 0 for Team A, 1 for Team B\n      const betAmount = ethers.utils.parseEther(\"0.01\"); // Example bet amount\n\n      const transaction = await contract.placeBet(gameId, betOption, {\n        value: betAmount\n      });\n      await transaction.wait(); // Wait for the transaction to be mined\n\n      alert(`Bet placed on ${team === 'home' ? game.home.name : game.away.name} for Game ${game.id}`);\n    } catch (error) {\n      console.error(\"Error placing bet:\", error);\n      alert(\"Failed to place bet.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-scores\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Live NBA Scores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isWalletConnected ? liveScores.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: liveScores.map((game, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"game-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: game.home.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 20\n          }, this), \" vs \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: game.away.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 57\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Score: \", game.home_points, \" - \", game.away_points]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBet(game, 'home'),\n          children: [\"Bet on \", game.home.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBet(game, 'away'),\n          children: [\"Bet on \", game.away.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No live games available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please connect your wallet to view live scores.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(LiveScores, \"jcCNpMPWzJC8fva13jti4LqswOA=\");\n_c = LiveScores;\nexport default LiveScores;\nvar _c;\n$RefreshReg$(_c, \"LiveScores\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","LiveScores","isWalletConnected","_s","liveScores","setLiveScores","selectedGame","setSelectedGame","fetchScores","response","fetch","data","json","error","console","handleBet","game","team","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","contractAddress","abi","contract","Contract","gameId","id","betOption","betAmount","utils","parseEther","transaction","placeBet","value","wait","alert","home","name","away","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","home_points","away_points","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/LiveScores.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers'; // Import ethers for interacting with MetaMask\nimport './LiveScores.css'; \n\nfunction LiveScores({ isWalletConnected }) {\n  const [liveScores, setLiveScores] = useState([]);\n  const [selectedGame, setSelectedGame] = useState(null); // Store selected game\n\n  useEffect(() => {\n    // Fetch live scores only if the wallet is connected\n    if (isWalletConnected) {\n      async function fetchScores() {\n        try {\n          const response = await fetch('http://127.0.0.1:5000/api/live_scores');\n          const data = await response.json();\n          setLiveScores(data);\n        } catch (error) {\n          console.error(\"Error fetching live scores:\", error);\n        }\n      }\n      fetchScores();\n    } else {\n      setLiveScores([]); // Clear scores if wallet is disconnected\n    }\n  }, [isWalletConnected]);\n\n  // Function to handle betting on a game\n  async function handleBet(game, team) {\n    if (!window.ethereum) {\n      console.error(\"MetaMask is not installed!\");\n      return;\n    }\n\n    try {\n      // Request user to connect MetaMask\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      // Load the smart contract\n      const contractAddress = \"0x2905F0A41A80510898aE76290cf1eCFCA41650CC\"; // Replace with deployed contract address\n      const abi = [\n        // Minimal ABI to interact with the placeBet function in your contract\n        \"function placeBet(uint256 _gameId, uint8 _option) payable\"\n      ];\n      const contract = new ethers.Contract(contractAddress, abi, signer);\n\n      // Call the placeBet function on the smart contract\n      const gameId = game.id; // Assuming `game` has an `id` property\n      const betOption = team === 'home' ? 0 : 1; // 0 for Team A, 1 for Team B\n      const betAmount = ethers.utils.parseEther(\"0.01\"); // Example bet amount\n\n      const transaction = await contract.placeBet(gameId, betOption, { value: betAmount });\n      await transaction.wait(); // Wait for the transaction to be mined\n\n      alert(`Bet placed on ${team === 'home' ? game.home.name : game.away.name} for Game ${game.id}`);\n    } catch (error) {\n      console.error(\"Error placing bet:\", error);\n      alert(\"Failed to place bet.\");\n    }\n  }\n\n  return (\n    <div className=\"live-scores\">\n      <h2>Live NBA Scores</h2>\n      {isWalletConnected ? (\n        liveScores.length > 0 ? (\n          <ul>\n            {liveScores.map((game, index) => (\n              <li key={index} className=\"game-item\">\n                <p><strong>{game.home.name}</strong> vs <strong>{game.away.name}</strong></p>\n                <p>Score: {game.home_points} - {game.away_points}</p>\n                <button onClick={() => handleBet(game, 'home')}>Bet on {game.home.name}</button>\n                <button onClick={() => handleBet(game, 'away')}>Bet on {game.away.name}</button>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No live games available.</p>\n        )\n      ) : (\n        <p>Please connect your wallet to view live scores.</p>\n      )}\n    </div>\n  );\n}\n\nexport default LiveScores;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ,CAAC,CAAC;AACjC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExDC,SAAS,CAAC,MAAM;IACd;IACA,IAAIK,iBAAiB,EAAE;MACrB,eAAeM,WAAWA,CAAA,EAAG;QAC3B,IAAI;UACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;UACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;UAClCP,aAAa,CAACM,IAAI,CAAC;QACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACrD;MACF;MACAL,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACLH,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACH,iBAAiB,CAAC,CAAC;;EAEvB;EACA,eAAea,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACnC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACpBL,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAC;MAC3C;IACF;IAEA,IAAI;MACF;MACA,MAAMK,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChE,MAAMC,QAAQ,GAAG,IAAIxB,MAAM,CAACyB,SAAS,CAACC,YAAY,CAACN,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;;MAEnC;MACA,MAAMC,eAAe,GAAG,4CAA4C,CAAC,CAAC;MACtE,MAAMC,GAAG,GAAG;MACV;MACA,2DAA2D,CAC5D;MACD,MAAMC,QAAQ,GAAG,IAAI/B,MAAM,CAACgC,QAAQ,CAACH,eAAe,EAAEC,GAAG,EAAEH,MAAM,CAAC;;MAElE;MACA,MAAMM,MAAM,GAAGf,IAAI,CAACgB,EAAE,CAAC,CAAC;MACxB,MAAMC,SAAS,GAAGhB,IAAI,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MAC3C,MAAMiB,SAAS,GAAGpC,MAAM,CAACqC,KAAK,CAACC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;;MAEnD,MAAMC,WAAW,GAAG,MAAMR,QAAQ,CAACS,QAAQ,CAACP,MAAM,EAAEE,SAAS,EAAE;QAAEM,KAAK,EAAEL;MAAU,CAAC,CAAC;MACpF,MAAMG,WAAW,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;;MAE1BC,KAAK,CAAC,iBAAiBxB,IAAI,KAAK,MAAM,GAAGD,IAAI,CAAC0B,IAAI,CAACC,IAAI,GAAG3B,IAAI,CAAC4B,IAAI,CAACD,IAAI,aAAa3B,IAAI,CAACgB,EAAE,EAAE,CAAC;IACjG,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C4B,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF;EAEA,oBACEzC,OAAA;IAAK6C,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B9C,OAAA;MAAA8C,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBhD,iBAAiB,GAChBE,UAAU,CAAC+C,MAAM,GAAG,CAAC,gBACnBnD,OAAA;MAAA8C,QAAA,EACG1C,UAAU,CAACgD,GAAG,CAAC,CAACpC,IAAI,EAAEqC,KAAK,kBAC1BrD,OAAA;QAAgB6C,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACnC9C,OAAA;UAAA8C,QAAA,gBAAG9C,OAAA;YAAA8C,QAAA,EAAS9B,IAAI,CAAC0B,IAAI,CAACC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,QAAI,eAAAlD,OAAA;YAAA8C,QAAA,EAAS9B,IAAI,CAAC4B,IAAI,CAACD;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC7ElD,OAAA;UAAA8C,QAAA,GAAG,SAAO,EAAC9B,IAAI,CAACsC,WAAW,EAAC,KAAG,EAACtC,IAAI,CAACuC,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrDlD,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAMzC,SAAS,CAACC,IAAI,EAAE,MAAM,CAAE;UAAA8B,QAAA,GAAC,SAAO,EAAC9B,IAAI,CAAC0B,IAAI,CAACC,IAAI;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAChFlD,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAMzC,SAAS,CAACC,IAAI,EAAE,MAAM,CAAE;UAAA8B,QAAA,GAAC,SAAO,EAAC9B,IAAI,CAAC4B,IAAI,CAACD,IAAI;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA,GAJzEG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAELlD,OAAA;MAAA8C,QAAA,EAAG;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC/B,gBAEDlD,OAAA;MAAA8C,QAAA,EAAG;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/C,EAAA,CAjFQF,UAAU;AAAAwD,EAAA,GAAVxD,UAAU;AAmFnB,eAAeA,UAAU;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}