{"ast":null,"code":"var _jsxFileName = \"/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js\",\n  _s = $RefreshSig$();\n// WalletActions.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport PaymentContractABI from './PaymentContract.json';\nimport './WalletActions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = 'YOUR_CONTRACT_ADDRESS_HERE';\nfunction WalletActions() {\n  _s();\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n  useEffect(() => {\n    if (window.ethereum) {\n      fetchBalance();\n    }\n  }, []);\n  const fetchBalance = async () => {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, PaymentContract.abi, provider);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      const userBalance = await contract.balances(userAddress);\n      setBalance(ethers.formatEther(userBalance));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      setError('Failed to load balance');\n    }\n  };\n  const handleDeposit = async () => {\n    try {\n      if (!amount) {\n        alert('Please enter an amount to deposit.');\n        return;\n      }\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n      const tx = await contract.deposit({\n        value: ethers.parseEther(amount)\n      });\n      await tx.wait();\n      alert('Deposit successful!');\n      setAmount('');\n      fetchBalance();\n    } catch (error) {\n      console.error('Deposit error:', error);\n      alert('Deposit failed. Please check the transaction details or try again.');\n    }\n  };\n  const handleWithdraw = async () => {\n    try {\n      if (!amount) {\n        alert('Please enter an amount to withdraw.');\n        return;\n      }\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n      const tx = await contract.withdraw(ethers.parseEther(amount));\n      await tx.wait();\n      alert('Withdrawal successful!');\n      setAmount('');\n      fetchBalance();\n    } catch (error) {\n      console.error('Withdrawal error:', error);\n      alert('Withdrawal failed. Please check the transaction details or try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Balance: \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      placeholder: \"Enter amount in ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDeposit,\n      children: \"Deposit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWithdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletActions, \"l5UuqKH0wJvztNBzrF+lqNbRrJk=\");\n_c = WalletActions;\nexport default WalletActions;\nvar _c;\n$RefreshReg$(_c, \"WalletActions\");","map":{"version":3,"names":["React","useState","useEffect","ethers","PaymentContractABI","jsxDEV","_jsxDEV","contractAddress","WalletActions","_s","amount","setAmount","balance","setBalance","error","setError","window","ethereum","fetchBalance","provider","BrowserProvider","contract","Contract","PaymentContract","abi","signer","getSigner","userAddress","getAddress","userBalance","balances","formatEther","console","handleDeposit","alert","tx","deposit","value","parseEther","wait","handleWithdraw","withdraw","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/leondanquah/BlockchainBets/ub-hacking-create-your-repo-here-blockchain-bets/frontend/src/WalletActions.js"],"sourcesContent":["// WalletActions.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport PaymentContractABI from './PaymentContract.json';\nimport './WalletActions.css';\n\nconst contractAddress = 'YOUR_CONTRACT_ADDRESS_HERE';\n\nfunction WalletActions() {\n  const [amount, setAmount] = useState('');\n  const [balance, setBalance] = useState('0');\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (window.ethereum) {\n      fetchBalance();\n    }\n  }, []);\n\n  const fetchBalance = async () => {\n    try {\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const contract = new ethers.Contract(contractAddress, PaymentContract.abi, provider);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      \n      const userBalance = await contract.balances(userAddress);\n      setBalance(ethers.formatEther(userBalance));\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      setError('Failed to load balance');\n    }\n  };\n\n  const handleDeposit = async () => {\n    try {\n      if (!amount) {\n        alert('Please enter an amount to deposit.');\n        return;\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n      const tx = await contract.deposit({ value: ethers.parseEther(amount) });\n      await tx.wait();\n      alert('Deposit successful!');\n      setAmount('');\n      fetchBalance();\n    } catch (error) {\n      console.error('Deposit error:', error);\n      alert('Deposit failed. Please check the transaction details or try again.');\n    }\n  };\n\n  const handleWithdraw = async () => {\n    try {\n      if (!amount) {\n        alert('Please enter an amount to withdraw.');\n        return;\n      }\n\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, PaymentContractABI.abi, signer);\n\n      const tx = await contract.withdraw(ethers.parseEther(amount));\n      await tx.wait();\n      alert('Withdrawal successful!');\n      setAmount('');\n      fetchBalance();\n    } catch (error) {\n      console.error('Withdrawal error:', error);\n      alert('Withdrawal failed. Please check the transaction details or try again.');\n    }\n  };\n\n  return (\n    <div className=\"wallet-actions\">\n      <p>Current Balance: {balance} ETH</p>\n      <input\n        type=\"text\"\n        value={amount}\n        onChange={(e) => setAmount(e.target.value)}\n        placeholder=\"Enter amount in ETH\"\n      />\n      <button onClick={handleDeposit}>Deposit</button>\n      <button onClick={handleWithdraw}>Withdraw</button>\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n}\n\nexport default WalletActions;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}